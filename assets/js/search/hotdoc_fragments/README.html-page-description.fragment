fragment_downloaded_cb({"url":"README.html#page-description","fragment":"\n    \nBuild Status |\nDocumentation |\nContributing |\nChat Room |\nRelease Notes\n[Notice] On Jan-01-2021, The default branch of TAOS-CI is changed from master to main. For more details, please refer to https://github.com/nnstreamer/TAOS-CI/issues/663\nTAOS-CI is an automated project coordinator to achieve \"Review less, merge faster\" with a tool-based review system. It accelerates a software development based on the GitHub WebHook API. We aim to prevent a regression, find bugs, and reduce a nonproductive review process due to incorrect PRs in https://GitHub.com. Actually, submitting incorrect PRs is a PITA in case of continuous integration. Basically, PRs causing regressions will not be automatically merged. As a result, it drastically reduces the existing burdens of reviewers.\n\n\nThe proposed system supports a light-weight code review automation approach to support a desktop computer based servers that have out-of-date CPUs and low memory capacity. Also, if you want to enable your project specific CI facilities, it will be easily customizable for your GitHub repository because it just requires APACHE, PHP, and BASH packages. Especially, we are mainly concentrating on the following three goals among a number of action items.\nPlease refer Here.\nGeunsik Lim, MyungJoo Ham, Jijoong Moon, Wook Song, Sangjung Woo, and Sewon Oh, \"TAOS-CI: Lightweight & Modular Continuous Integration System for Edge Computing,\" 37th IEEE International Conference on Consumer Electronics (ICCE), Las Vegas, USA, Jan. 2019.\nGeunsik Lim, MyungJoo Ham, and Jaeyun Jung, \"VTB: Cloud-based Testbed for On-Device AI,\" Proc. of KIISE Korea Computer Congress, Jeju, Korea, Jun. 2019. Best Presentation Paper. (in Korean)\nGeunsik Lim, MyungJoo Ham, and Jaeyun Jung, \"VTS: Virtual Testbed System for Cloud-based On-Device AI Application,\" KIISE Transactions on Computing Practices : Computing Practices and Letter (CPL), Jan. 2020. Invited paper. (in Korean)\nGeunsik Lim, MyungJoo Ham, Jijoong Moon, and Wook Song, \"LightSys: Lightweight and Efficient CI System for Improving Integration Speed of Software,\" 43rd ACM/IEEE International Conference on Software Engineering (ICSE)-SEIP, Madrid, Spain (Virtual Conference due to COVID-19), May. 2021. (Accepted)\nPlease refer to How to install TAOS-CI.\nPlease refer to How to use new CI module.\nNow, available facilities are as following:\nNote that you have to execute a self assessment before submitting your PR.\nPlease refer to How to build a package.\n\nMinimize a nonproductive review process\nProvide a test automation (both build and run)\nPrevent a performance regression\nFind bugs at a proper time before merging buggy codes\nGenerate a doxygen-based developer manual\nSupport modulable facilities with plug-in interface\nIntegrate the existing opensource tools easily\nVerify an integrity of a package by supporting a platform build\nSupport multiple operating systems as follows:\n\nUbuntu: https://www.ubuntu.com/\nTizen: https://source.tizen.org/\nYocto: https://www.yoctoproject.org/\nAndroid: https://source.android.org\nTBD & TBI\n\n\n\n\nUbuntu: https://www.ubuntu.com/\nTizen: https://source.tizen.org/\nYocto: https://www.yoctoproject.org/\nAndroid: https://source.android.org\nTBD & TBI\n\n\nAutomating tests (both build and run)\nPreventing Performance regression\nFinding potential bugs at a proper time\n\n\n\nGeunsik Lim, MyungJoo Ham, Jijoong Moon, Wook Song, Sangjung Woo, and Sewon Oh, \"TAOS-CI: Lightweight & Modular Continuous Integration System for Edge Computing,\" 37th IEEE International Conference on Consumer Electronics (ICCE), Las Vegas, USA, Jan. 2019.\n\n\nGeunsik Lim, MyungJoo Ham, and Jaeyun Jung, \"VTB: Cloud-based Testbed for On-Device AI,\" Proc. of KIISE Korea Computer Congress, Jeju, Korea, Jun. 2019. Best Presentation Paper. (in Korean)\n\n\nGeunsik Lim, MyungJoo Ham, and Jaeyun Jung, \"VTS: Virtual Testbed System for Cloud-based On-Device AI Application,\" KIISE Transactions on Computing Practices : Computing Practices and Letter (CPL), Jan. 2020. Invited paper. (in Korean)\n\n\nGeunsik Lim, MyungJoo Ham, Jijoong Moon, and Wook Song, \"LightSys: Lightweight and Efficient CI System for Improving Integration Speed of Software,\" 43rd ACM/IEEE International Conference on Software Engineering (ICSE)-SEIP, Madrid, Spain (Virtual Conference due to COVID-19), May. 2021. (Accepted)\n\n\n\n\n\nPre-build Group (before a build): File size, New line, No body, Signed-off, Clang-format, Doxygen, Timestamp, Hardcoded-path, Executable, RPM-spec, CPPcheck, Pylint, Indent, Resource checker, and so on.\n\nPost-build Group (after a build): Ubuntu builder, Tizen builder, Yocto builder, and Android (Coming Soon).\n\n\nCI: Continuous Integration\nCD: Continuous Deployment\nPR: Pull Request\nTBD: To Be Defined\nTBI: To Be Implemented\n\n\nApache License 2.0\n\n\nWebHook API of GitHub - https://developer.github.com/WebHooks/\nA painless self-hosted Git service, Gogs - https://gogs.io/\nFree file transfer software, Curl - https://curl.haxx.se/docs/\nPapers\n\nICSE2018, \"Modern code review: a case study at google\"\nICSE2015, \"Do Not Find Bugs: how the Current Code Review Best Practice Slows Us Down\"\nIFIPAICT, \"The Impact of a Low Level of Agreement Among Reviewers in a Code Review Process\"\nASE2014, \"Automated Unit Test Generation for Classes with Environment Dependencies\"\nFSE2016, \"Why We Refactor? Confessions of GitHub Contributors\"\nFSE2016, \"Factors Influencing Code Review Processes in Industry\"\n\n\n\n\nICSE2018, \"Modern code review: a case study at google\"\nICSE2015, \"Do Not Find Bugs: how the Current Code Review Best Practice Slows Us Down\"\nIFIPAICT, \"The Impact of a Low Level of Agreement Among Reviewers in a Code Review Process\"\nASE2014, \"Automated Unit Test Generation for Classes with Environment Dependencies\"\nFSE2016, \"Why We Refactor? Confessions of GitHub Contributors\"\nFSE2016, \"Factors Influencing Code Review Processes in Industry\"\n\n"});