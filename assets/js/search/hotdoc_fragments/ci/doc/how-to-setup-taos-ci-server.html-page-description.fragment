fragment_downloaded_cb({"url":"ci/doc/how-to-setup-taos-ci-server.html#page-description","fragment":"This section describes an administrator guide for TAOS-CI server.\nWe assume that you already installed Ubuntu 16.04 x86_64 distribution in your own computer.\nIt means that you have to execute the mandatory tasks by default.\nFirst of all, let's enable www-data as a system account for debugging and setting-up the TAOS-CI solution. Please replace \"/bin/no-login\" with \"/bin/bash\". Note that you must restore \"/bin/no-login\" to avoid an unexpected security issue after doing all setup procedures.\nIn order to run all modules of TAOS-CI normally, you have to install required packages as a first step.\nPlease run install-packages-base.sh that is located in the ci/taos/webapp folder.\nYou have to update /etc/sudoers to give www-data user sudo access with NOPASSWD  in order to run \"git clone\" command normally in Apache/PHP environment as following:\nNote that you must protect configuration files that include passwords.\nOpen the Apache configuration file as follows to enable .htaccess file for security.\nThen, restart the Apache webserver in order to put these changes into effect.\nThe .htaccess file allows us to modify the rewrite rules without accessing server configuration files.\nFor this reason, the .htaccess file is critical to ensure the security of your web application.\nIt means that you may decide the optional tasks optionally. In this case you must the enable or disable the CI modules in the configuration files to avoid unexpected errors.\nWe recommend that you use your own domain name address instead of IP address for convenience and maintenance. In this case, you can receive a host name free of charge at https://freedns.afraid.org in order to use a host name such as {your_host}.mooo.com.\nThe pbuilderrc file contains default values used in the pbuilder program invocation.\nWhen pbuilder is invoked by www-data (user id of Apache webserver), /etc/pbuilderrc and ${HOME}/.pbuilderrc are read.\nIt is useful to use --configfile option to load up a preset configuration file when switching between configuration files for different distributions.\nThe file itself is sourced by a shell script, so it is required that the file conforms to shell script conventions.\nFor more details, refer to http://manpages.ubuntu.com/manpages/trusty/man5/pbuilderrc.5.html\n(Optional): How to suppress a storage usage of /var/cache/pbuilder folder\nIf the /var/cache/pbuilder folder continually increases a storage usage, we recommend that you try to use a symbolic link after attaching an storage additionally.\nFor example, $ sudo ln -s /{external_storage}/pbuilder /var/cache/pbuilder.\n(Optional): How to use a tmpfs filesystem to speed-up an execution time of pbuilder\nIf you have lots of RAM more than 16 GB, the tmpfs based pbuilder operation can be accelerated. Please, add the below statement into the /etc/fstab file as folows.\nYou have to write ~/.gbs.conf in order that the www-data ID of Apache webserver generates a RPM package with gbs build command. We assume that you are using the www-data as a default ID of a GitHub repository.\nIn case of Yocto, you can build a package with OpenEmbedded/devtool to verify a build validation on YOCTO platform\nFor more details, please refer to https://wiki.yoctoproject.org/wiki/Application_Development_with_Extensible_SDK\nNote that a devtool command are the configuration file (e.g.,environment-setup-i586-poky-linux) are located in the Extensible Software Development Kit (eSDK) folder. It means that you cannot install the devtool command via the apt command.\nFor example, the description of crontab for deleting files older than 6 days\nunder the /var/www/html/<your_prj_name>/ci/repo-workers/pr-checker/* every day at 5:30 AM is as follows.\nmtime means the last modification timestamp and the results of find may not be\nthe expected files depending on the backup method. Note that too many inodes\nresults in \"No space left on device\" issue despite available storage spaces.\nwe recommend that you enable a temporary filesystem (tmpfs) to improve build time and\navoid a situation that the number of inodes exceeds that of maximum inodes.\nTo monitor # of free inodes, run $ sudo tune2fs -l /dev/sdax | grep Free command.\nFor more details about tmpfs, please refer to https://www.kernel.org/doc/Documentation/filesystems/tmpfs.txt\nIn order to avoid OOM operations while running a build process, You may enable swap space with swapfile.\nNote that it does not speed up the build time.\nFirst of all, you have to install latex packages to generate PDF file from latex as follows.\nThen, generate a single PDF file by running the below script in Documentation folder.\nFinally, let's generate automatically PDF book per 1 hour with cron table (e.g., /etc/crontab).\nScanCode Toolkit is a set of code scanning tools to detect the origin and license of code and dependencies.\nIt uses a plug-in architecture to run a series of scan-related tools in one process flow.\n\nFor a physical machine, http://mirror.kakao.com/ubuntu-releases/xenial/\nFor a virtual machine, https://www.osboxes.org/ubuntu/\nFor a docker image, https://hub.docker.com/_/ubuntu/\n\n\n\n\n/etc/pbuilderrc (by default): The configuration file for pbuilder, used in pdebuild.\n\n\n\n\n/usr/share/pbuilder/pbuilderrc: The default configuration file for pbuilder, used in pdebuild.\n\n\n\n\n${HOME}/.pbuilderrc: Configuration file for pbuilder, used in pdebuild.  It overrides /etc/pbuilderrc\n\n\n\n\nNote that you do not have to run book-doxygen-publish.sh file at the same time because the LibreOffice commands can not be executed simultaneously.\n\n"});