fragment_downloaded_cb({"url":"ci/doc/coding-convention.html#page-description","fragment":"ROS Application follows Google Style Guide for coding convention.\nA few rules might be ignored depending on modules. For the full list of ignored rules, please see the following link:\nWhen you push your commits, ALWAYS run clang-format & cpplint to submit a commit with style change. If there is a change due to code style issues, make two separate commits: (Please do not include other codes' style change in the same commit)\nclang-format automatically formats your code.\nPlease, refer to http://releases.llvm.org/3.9.0/tools/clang/docs/ClangFormatStyleOptions.html for more details.\ncpplint is a static C++ style checker following Google's C++ style guide. cpplint for ROS modules is available at AuDri/ROS/catkin/style/cpplint.py.\nWe use yapf as a formatter for python files.\nIt changes the python files according to the defined style in ~/.config/yapf/style file.\nWe use pep 8. We use style config as below. You can use yapf with PIP.\nPylint is a source code, bug and quality checker for the Python programming language. It follows the style recommended by PEP 8, the Python style guide.\nTo check a python file with pylint:\nThis program reformat and beautify PHP 4 and PHP 5 source code files automatically. It is written in PHP 5 and has a command line tool\n\ncommit with style change only (i.e., commit clang-formatted original code - not your code change).\ncommit with your code change only (i.e., contents only).\n\n"});