fragment_downloaded_cb({"url":"ci/doc/how-to-good-commit-message.html#page-description","fragment":"If applied, this commit will be <your subject line here>\nDetails for each point and good commit message examples can be found on https://wiki.openstack.org/wiki/GitCommitMessages#Information_in_commit_messages\nIf the commit refers to an issue, add this information to the commit message header or body. e.g. the GitHub web platform automatically converts issue ids (e.g. #123) to links referring to the related issue. For issues tracker like Jira there are plugins which also converts Jira tickets, e.g. Jirafy.\nIn header:\nIn body:\nA changelog is a file which contains a chronologically ordered list of notable changes for each version of a commit.\nI has to be written to make it easier for users and contributors in order to see precisely what notable changes have been made between each version of the commit.\nWhen a commit changes, reviewers want to know why and how.\nGuiding Principles\nTypes of Changes\nCase Study\n\nSeparate subject from body with a blank line\nDo not end the subject line with a period\nCapitalize the subject line and each paragraph\nUse the imperative mood in the subject line\nWrap lines at 72 characters\nUse the body to explain what and why you have done something. In most cases, you can leave out details about how a change has been made.\n\n\nDescribe why a change is being made.\nHow does it address the issue?\nWhat effects does the patch have?\nDo not assume the reviewer understands what the original problem was.\nDo not assume the code is self-evident/self-documenting.\nRead the commit message to see if it hints at improved code structure.\nThe first commit line is the most important.\nDescribe any limitations of the current code.\nDo not include patch set-specific comments.\n\n\nChangelogs are for humans, not machines.\nThere should be an entry for every single version.\nThe same types of changes should be grouped.\nVersions and sections should be linkable.\nThe latest version comes first.\nThe release date of each version is displayed.\n\n\n\nAdded for new features.\n\nChanged for changes in existing functionality.\n\nDeprecated for soon-to-be removed features.\n\nRemoved for now removed features.\n\nFixed for any bug fixes.\n\nSecurity in case of vulnerabilities.\n\n\nhttps://lkml.org/lkml/2019/4/9/51 : V5, Add support for MIPID02 CSI-2\nhttps://lkml.org/lkml/2019/4/9/507 : V10, fieldbus_dev: add Fieldbus Device Subsystem\nhttps://lkml.org/lkml/2019/4/2/941 : V5, Perf: Add Icelake support\n\n"});