fragment_downloaded_cb({"url":"ci/doc/how-to-use-lcov-to-generate-code-coverage-stat.html#page-description","fragment":"This document describes how to write a test coverage with GCOV and LCOV. LCOV is a graphical front-end\nfor GCC's coverage testing tool gcov. It collects gcov data for multiple source files and creates HTML\npages containing the source code annotated with coverage information. It also adds overview pages for\neasy navigation within the file structure. LCOV supports statement, function and branch coverage measurement.\nHTML based output: coverage rates are additionally indicated using bar\ngraphs and specific colors.\nSupport for large projects: overview pages allow quick browsing of\ncoverage data by providing three levels of detail: directory view,\nfile view and source code view.\nTAOS-CI provides the automated code coverage tool by default.\nYou just have to append the below statement in /etc/crontab file as following:\nIn order to check the generated result, please run the below statement.\nThe –coverage option here is used to compile and link code needed for coverage analysis.\nLet's change the path that .gcda files are created.\nNext we need to export two variables namely GCOV_PREFIX and GCOV_PREFIX_STRIP.\nSet GCOV_PREFIX to the folder you want the output files to be in.\nThe GCOV_PREFIX_STRIP is equal to the the number of forward slashes or “/” in the path.\nYou can generate .gcda file by running the example program.\nNow, you can generate the report file with html format.\nlcov options:\ngenhtml option:\nLet's run a simple web-server with the \"SimpleHTTPServer\" module of Python.\nThe red lines are the ones not executed or uncovered region.\nThe blue lines are the ones covered. Also you can look at the Line data section\nfor the number of times the lines have been executed.\n\n\nHTML based output: coverage rates are additionally indicated using bar\ngraphs and specific colors.\n\n\nSupport for large projects: overview pages allow quick browsing of\ncoverage data by providing three levels of detail: directory view,\nfile view and source code view.\n\n\n\n\nlcov options:\n\n-t: sets a test name\n-o: to specify the output file\n-c: to capture the coverage data\n-d: to specify the directory where the data files needs to be searched\n\n\n\ngenhtml option:\n\n-o To specify the output folder name\n\n\n\n\n-t: sets a test name\n-o: to specify the output file\n-c: to capture the coverage data\n-d: to specify the directory where the data files needs to be searched\n\n\n-o To specify the output folder name\n\n\nhttp://ltp.sourceforge.net/coverage/lcov/output/index.html\n\n\nhttp://gcc.gnu.org/onlinedocs/gcc/Gcov.html\nhttp://ltp.sourceforge.net/coverage/lcov.php\n\n"});